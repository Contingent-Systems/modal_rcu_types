\begin{thebibliography}{10}
\providecommand{\url}[1]{\texttt{#1}}
\providecommand{\urlprefix}{URL }
\providecommand{\doi}[1]{https://doi.org/#1}

\bibitem{DBLP:conf/cav/AlglaveKT13}
Alglave, J., Kroening, D., Tautschnig, M.: Partial orders for efficient bounded
  model checking of concurrent software. In: Computer Aided Verification - 25th
  International Conference, {CAV} 2013, Saint Petersburg, Russia, July 13-19,
  2013. Proceedings. pp. 141--157 (2013). \doi{10.1007/978-3-642-39799-8\_9},
  \url{http://dx.doi.org/10.1007/978-3-642-39799-8_9}

\bibitem{Alglave:2018:FSC:3173162.3177156}
Alglave, J., Maranget, L., McKenney, P.E., Parri, A., Stern, A.: Frightening
  small children and disconcerting grown-ups: Concurrency in the linux kernel.
  In: Proceedings of the Twenty-Third International Conference on Architectural
  Support for Programming Languages and Operating Systems. pp. 405--418. ASPLOS
  '18, ACM, New York, NY, USA (2018). \doi{10.1145/3173162.3177156},
  \url{http://doi.acm.org/10.1145/3173162.3177156}

\bibitem{Arbel:2014:CUR:2611462.2611471}
Arbel, M., Attiya, H.: Concurrent updates with rcu: Search tree as an example.
  In: Proceedings of the 2014 ACM Symposium on Principles of Distributed
  Computing. pp. 196--205. PODC '14, ACM, New York, NY, USA (2014).
  \doi{10.1145/2611462.2611471},
  \url{http://doi.acm.org/10.1145/2611462.2611471}

\bibitem{Barnett:2005:BMR:2090458.2090481}
Barnett, M., Chang, B.Y.E., DeLine, R., Jacobs, B., Leino, K.R.M.: Boogie: A
  modular reusable verifier for object-oriented programs. In: Proceedings of
  the 4th International Conference on Formal Methods for Components and
  Objects. pp. 364--387. FMCO'05, Springer-Verlag, Berlin, Heidelberg (2006).
  \doi{10.1007/11804192\_17}, \url{http://dx.doi.org/10.1007/11804192_17}

\bibitem{Calcagno:2007:LAA:1270399.1271718}
Calcagno, C., O'Hearn, P.W., Yang, H.: Local action and abstract separation
  logic. In: Proceedings of the 22Nd Annual IEEE Symposium on Logic in Computer
  Science. pp. 366--378. LICS '07, IEEE Computer Society, Washington, DC, USA
  (2007). \doi{10.1109/LICS.2007.30},
  \url{https://doi.org/10.1109/LICS.2007.30}

\bibitem{DBLP:conf/asplos/ClementsKZ12}
Clements, A.T., Kaashoek, M.F., Zeldovich, N.: Scalable address spaces using
  {RCU} balanced trees. In: Proceedings of the 17th International Conference on
  Architectural Support for Programming Languages and Operating Systems,
  {ASPLOS} 2012, London, UK, March 3-7, 2012. pp. 199--210 (2012).
  \doi{10.1145/2150976.2150998},
  \url{http://doi.acm.org/10.1145/2150976.2150998}

\bibitem{Cohen:2009:VPS:1616077.1616080}
Cohen, E., Dahlweid, M., Hillebrand, M., Leinenbach, D., Moskal, M., Santen,
  T., Schulte, W., Tobies, S.: Vcc: A practical system for verifying concurrent
  c. In: Proceedings of the 22Nd International Conference on Theorem Proving in
  Higher Order Logics. pp. 23--42. TPHOLs '09, Springer-Verlag, Berlin,
  Heidelberg (2009). \doi{10.1007/978-3-642-03359-9\_2},
  \url{http://dx.doi.org/10.1007/978-3-642-03359-9_2}

\bibitem{Cooper2015RelativisticPI}
Cooper, T., Walpole, J.: Relativistic programming in haskell using types to
  enforce a critical section discipline (2015),
  \url{http://web.cecs.pdx.edu/~walpole/papers/haskell2015.pdf}

\bibitem{Desnoyers:2013:MSM:2506164.2506174}
Desnoyers, M., McKenney, P.E., Dagenais, M.R.: Multi-core systems modeling for
  formal verification of parallel algorithms. SIGOPS Oper. Syst. Rev.
  \textbf{47}(2),  51--65 (Jul 2013). \doi{10.1145/2506164.2506174},
  \url{http://doi.acm.org/10.1145/2506164.2506174}

\bibitem{urcu_ieee}
Desnoyers, M., McKenney, P.E., Stern, A., Walpole, J.: User-level
  implementations of read-copy update. IEEE Transactions on Parallel and
  Distributed Systems  (2009),
  \url{/static/publications/desnoyers-ieee-urcu-submitted.pdf}

\bibitem{views}
Dinsdale{-}Young, T., Birkedal, L., Gardner, P., Parkinson, M.J., Yang, H.:
  Views: compositional reasoning for concurrent programs. In: The 40th Annual
  {ACM} {SIGPLAN-SIGACT} Symposium on Principles of Programming Languages,
  {POPL} '13, Rome, Italy - January 23 - 25, 2013. pp. 287--300 (2013).
  \doi{10.1145/2429069.2429104},
  \url{http://doi.acm.org/10.1145/2429069.2429104}

\bibitem{Feng:2009:LRR:1480881.1480922}
Feng, X.: Local rely-guarantee reasoning. In: Proceedings of the 36th Annual
  ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. pp.
  315--327. POPL '09, ACM, New York, NY, USA (2009).
  \doi{10.1145/1480881.1480922},
  \url{http://doi.acm.org/10.1145/1480881.1480922}

\bibitem{Feng:2007:RCS:1762174.1762193}
Feng, X., Ferreira, R., Shao, Z.: On the relationship between concurrent
  separation logic and assume-guarantee reasoning. In: Proceedings of the 16th
  European Symposium on Programming. pp. 173--188. ESOP'07, Springer-Verlag,
  Berlin, Heidelberg (2007),
  \url{http://dl.acm.org/citation.cfm?id=1762174.1762193}

\bibitem{fu2010reasoning}
Fu, M., Li, Y., Feng, X., Shao, Z., Zhang, Y.: Reasoning about optimistic
  concurrency using a program logic for history. In: CONCUR. pp. 388--402.
  Springer (2010)

\bibitem{shao_temp}
Fu, M., Li, Y., Feng, X., Shao, Z., Zhang, Y.: Reasoning about optimistic
  concurrency using a program logic for history. In: Gastin, P., Laroussinie,
  F. (eds.) CONCUR 2010 - Concurrency Theory. pp. 388--402. Springer Berlin
  Heidelberg, Berlin, Heidelberg (2010)

\bibitem{toplas17}
Gordon, C.S., Ernst, M.D., Grossman, D., Parkinson, M.J.: {Verifying Invariants
  of Lock-free Data Structures with Rely-Guarantee and Refinement Types}. ACM
  Transactions on Programming Languages and Systems (TOPLAS)  \textbf{39}(3)
  (May 2017). \doi{10.1145/3064850}, \url{http://doi.acm.org/10.1145/3064850}

\bibitem{oopsla12}
Gordon, C.S., Parkinson, M.J., Parsons, J., Bromfield, A., Duffy, J.:
  {Uniqueness and Reference Immutability for Safe Parallelism}. In:
  {Proceedings of the 2012 ACM International Conference on Object Oriented
  Programming, Systems, Languages, and Applications (OOPSLA'12)}. {Tucson, AZ,
  USA} (October 2012). \doi{10.1145/2384616.2384619},
  \url{http://dl.acm.org/citation.cfm?id=2384619}

\bibitem{Gotsman:2013:VCM:2450268.2450289}
Gotsman, A., Rinetzky, N., Yang, H.: Verifying concurrent memory reclamation
  algorithms with grace. In: Proceedings of the 22Nd European Conference on
  Programming Languages and Systems. pp. 249--269. ESOP'13, Springer-Verlag,
  Berlin, Heidelberg (2013). \doi{10.1007/978-3-642-37036-6\_15},
  \url{http://dx.doi.org/10.1007/978-3-642-37036-6_15}

\bibitem{Howard:2011:RES:2001252.2001267}
Howard, P.W., Walpole, J.: A relativistic enhancement to software transactional
  memory. In: Proceedings of the 3rd USENIX Conference on Hot Topic in
  Parallelism. pp. 15--15. HotPar'11, USENIX Association, Berkeley, CA, USA
  (2011), \url{http://dl.acm.org/citation.cfm?id=2001252.2001267}

\bibitem{Kokologiannakis:2017:SMC:3092282.3092287}
Kokologiannakis, M., Sagonas, K.: Stateless model checking of the linux
  kernel's hierarchical read-copy-update (tree rcu). In: Proceedings of the
  24th ACM SIGSOFT International SPIN Symposium on Model Checking of Software.
  pp. 172--181. SPIN 2017, ACM, New York, NY, USA (2017).
  \doi{10.1145/3092282.3092287},
  \url{http://doi.acm.org/10.1145/3092282.3092287}

\bibitem{Kung:1980:CMB:320613.320619}
Kung, H.T., Lehman, P.L.: Concurrent manipulation of binary search trees. ACM
  Trans. Database Syst.  \textbf{5}(3),  354--382 (Sep 1980).
  \doi{10.1145/320613.320619}, \url{http://doi.acm.org/10.1145/320613.320619}

\bibitem{LiangMKM16}
Liang, L., McKenney, P.E., Kroening, D., Melham, T.: Verification of the
  tree-based hierarchical read-copy update in the linux kernel. CoRR
  \textbf{abs/1610.03052} (2016), \url{http://arxiv.org/abs/1610.03052}

\bibitem{Mandrykin:2016:TDV:3001219.3001297}
Mandrykin, M.U., Khoroshilov, A.V.: Towards deductive verification of c
  programs with shared data. Program. Comput. Softw.  \textbf{42}(5),  324--332
  (Sep 2016). \doi{10.1134/S0361768816050054},
  \url{http://dx.doi.org/10.1134/S0361768816050054}

\bibitem{Mckenney:2004:EDD:1048173}
Mckenney, P.E.: Exploiting Deferred Destruction: An Analysis of
  Read-copy-update Techniques in Operating System Kernels. Ph.D. thesis, Oregon
  Health \& Science University (2004), aAI3139819

\bibitem{mc_report}
McKenney, P.E.: N4037: Non-transactional implementation of atomic tree move
  (May 2014),
  \url{http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4037.pdf}

\bibitem{McKenney2015SomeEO}
McKenney, P.E.: Some examples of kernel-hacker informal correctness reasoning.
  Technical Report paulmck.2015.06.17a (2015),
  \url{http://www2.rdrop.com/users/paulmck/techreports/IntroRCU.2015.06.17a.pdf}

\bibitem{abssem}
Mckenney, P.E.: A tour through rcu's requirements (2017),
  \url{https://www.kernel.org/doc/Documentation/RCU/Design/Requirements/Requirements.html}

\bibitem{Mckenney01read-copyupdate}
Mckenney, P.E., Appavoo, J., Kleen, A., Krieger, O., Krieger, O., Russell, R.,
  Sarma, D., Soni, M.: Read-copy update. In: In Ottawa Linux Symposium. pp.
  338--367 (2001)

\bibitem{Michael:2004:HPS:987524.987595}
Michael, M.M.: Hazard pointers: Safe memory reclamation for lock-free objects.
  IEEE Trans. Parallel Distrib. Syst.  \textbf{15}(6),  491--504 (Jun 2004).
  \doi{10.1109/TPDS.2004.8}, \url{http://dx.doi.org/10.1109/TPDS.2004.8}

\bibitem{Muller:2016:VVI:2963187.2963190}
M\"{u}ller, P., Schwerhoff, M., Summers, A.J.: Viper: A verification
  infrastructure for permission-based reasoning. In: Proceedings of the 17th
  International Conference on Verification, Model Checking, and Abstract
  Interpretation - Volume 9583. pp. 41--62. VMCAI 2016, Springer-Verlag New
  York, Inc., New York, NY, USA (2016). \doi{10.1007/978-3-662-49122-5\_2},
  \url{http://dx.doi.org/10.1007/978-3-662-49122-5_2}

\bibitem{grc}
Paul E.~McKenney, Mathieu~Desnoyers, L.J., Triplett, J.: The rcu-barrier
  menagerie (Nov 2016), \url{https://lwn.net/Articles/573497/}

\bibitem{Reynolds:2002:SLL:645683.664578}
Reynolds, J.C.: Separation logic: A logic for shared mutable data structures.
  In: Proceedings of the 17th Annual IEEE Symposium on Logic in Computer
  Science. pp. 55--74. LICS '02, IEEE Computer Society, Washington, DC, USA
  (2002), \url{http://dl.acm.org/citation.cfm?id=645683.664578}

\bibitem{verrcu}
Tassarotti, J., Dreyer, D., Vafeiadis, V.: Verifying read-copy-update in a
  logic for weak memory. In: Proceedings of the 36th ACM SIGPLAN Conference on
  Programming Language Design and Implementation. pp. 110--120. PLDI '15, ACM,
  New York, NY, USA (2015). \doi{10.1145/2737924.2737992},
  \url{http://doi.acm.org/10.1145/2737924.2737992}

\bibitem{Triplett:2011:RSC:2002181.2002192}
Triplett, J., McKenney, P.E., Walpole, J.: Resizable, scalable, concurrent hash
  tables via relativistic programming. In: Proceedings of the 2011 USENIX
  Conference on USENIX Annual Technical Conference. pp. 11--11. USENIXATC'11,
  USENIX Association, Berkeley, CA, USA (2011),
  \url{http://dl.acm.org/citation.cfm?id=2002181.2002192}

\bibitem{Turon:2014:GNW:2660193.2660243}
Turon, A., Vafeiadis, V., Dreyer, D.: Gps: Navigating weak memory with ghosts,
  protocols, and separation. In: Proceedings of the 2014 ACM International
  Conference on Object Oriented Programming Systems Languages \& Applications.
  pp. 691--707. OOPSLA '14, ACM, New York, NY, USA (2014).
  \doi{10.1145/2660193.2660243},
  \url{http://doi.acm.org/10.1145/2660193.2660243}

\bibitem{vafeiadis07}
Vafeiadis, V., Parkinson, M.: {A Marriage of Rely/Guarantee and Separation
  Logic}. In: Caires, L., Vasconcelos, V. (eds.) CONCUR 2007 – Concurrency
  Theory, Lecture Notes in Computer Science, vol.~4703, pp. 256--271. Springer
  Berlin / Heidelberg (2007),
  \url{http://dx.doi.org/10.1007/978-3-540-74407-8\_18},
  10.1007/978-3-540-74407-8\_18

\end{thebibliography}
